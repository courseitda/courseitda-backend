name: Backend CI on develop branch

on:
  pull_request:
    branches: [ "develop" ]
    types: [ opened, synchronize, reopened ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # git clone
      - name: Checkout
        uses: actions/checkout@v4

      # Java 21 버전
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'openjdk'

      # GitHub Storage에 빌드 관련 파일들을 캐싱하여 빌드 속도 개선
      - name: Gradle Caching
        uses: actions/cache@v4
        # caches: 의존성 캐싱을 통해 의존성 다운로드 속도 개선
        # wrapper: Gradle 자체 캐싱을 통해 Gradle 다운로드 속도 개선
        # build-cache: gradle task 결과 캐싱을 통해 task 실행 속도 개선
        with:
          path: |
            ~/.gradle/caches 
            ~/.gradle/wrapper
            ~/.gradle/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 빌드 진행(테스트 포함)
      - name: Build with Gradle
        run: ./gradlew build

      # 테스트에 대한 리포트 작성
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      # 테스트 실패 시, 실패한 코드 라인에 Check 코멘트 등록
      - name: Comment to test failed code line
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}
