plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'

    id 'com.diffplug.spotless' version '7.2.1'
    id 'checkstyle'
}

group = 'me.courseitda'
version = '0.0.1-SNAPSHOT'
description = 'courseitda'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

checkstyle {
    toolVersion = "11.0.0"
    configFile = file("config/checkstyle/checkstyle.xml")
}

spotless {
    java {
        // 코드 스타일 파일 적용
        eclipse().configFile("config/formatter/courseitda-style.xml")

        // 불필요한 import 제거
        removeUnusedImports()

        // import 순서 강제
        importOrder "java", "javax", "org", "com", ""
    }

    // Java 코드 이외의 파일(Markdown, YAML, Gradle 설정 파일) 포매팅 설정
    format("misc") {
        target("*.md", "*.yml", "*.yaml", "*.gradle")
        prettier().configFile(".editorconfig")
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // h2
    testRuntimeOnly 'com.h2database:h2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
